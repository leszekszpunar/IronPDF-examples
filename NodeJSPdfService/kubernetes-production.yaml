apiVersion: v1
kind: Namespace
metadata:
  name: pdf-service
  labels:
    name: pdf-service
    security.policy: strict
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pdf-service-config
  namespace: pdf-service
data:
  NODE_ENV: "production"
  PORT: "3000"
  MAX_CONCURRENT: "8"
  MAX_QUEUE_SIZE: "200"
  OPERATION_TIMEOUT: "60000"
  LOG_LEVEL: "info"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pdf-service-storage
  namespace: pdf-service
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pdf-service
  namespace: pdf-service
  labels:
    app: pdf-service
    version: v2.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: pdf-service
  template:
    metadata:
      labels:
        app: pdf-service
        version: v2.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      # Security Context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      
      serviceAccountName: pdf-service
      
      # Anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - pdf-service
              topologyKey: kubernetes.io/hostname
      
      containers:
      - name: pdf-service
        image: pdf-service:enterprise-v2.0.0
        imagePullPolicy: Always
        
        # Security Context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        
        # Environment Variables
        envFrom:
        - configMapRef:
            name: pdf-service-config
        
        # Resource Management
        resources:
          limits:
            memory: "4Gi"
            cpu: "2000m"
            ephemeral-storage: "10Gi"
          requests:
            memory: "2Gi"
            cpu: "1000m"
            ephemeral-storage: "5Gi"
        
        # Ports
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        
        # Health Checks
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 2
          successThreshold: 1
        
        # Startup probe for slower initialization
        startupProbe:
          httpGet:
            path: /health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12
          successThreshold: 1
        
        # Volume Mounts
        volumeMounts:
        - name: temp-storage
          mountPath: /app/temp
        - name: upload-storage
          mountPath: /app/uploads
        - name: log-storage
          mountPath: /app/logs
        - name: shared-storage
          mountPath: /shared
        
        # Graceful shutdown
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      
      # Volumes
      volumes:
      - name: temp-storage
        emptyDir:
          sizeLimit: 5Gi
      - name: upload-storage
        emptyDir:
          sizeLimit: 10Gi
      - name: log-storage
        emptyDir:
          sizeLimit: 1Gi
      - name: shared-storage
        persistentVolumeClaim:
          claimName: pdf-service-storage
      
      # DNS and networking
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      
      # Image pull secrets
      imagePullSecrets:
      - name: registry-secret
---
apiVersion: v1
kind: Service
metadata:
  name: pdf-service
  namespace: pdf-service
  labels:
    app: pdf-service
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: pdf-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pdf-service-hpa
  namespace: pdf-service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pdf-service
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pdf-service-pdb
  namespace: pdf-service
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: pdf-service
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pdf-service-network-policy
  namespace: pdf-service
spec:
  podSelector:
    matchLabels:
      app: pdf-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: api-gateway
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 3000
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pdf-service
  namespace: pdf-service
automountServiceAccountToken: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pdf-service-role
  namespace: pdf-service
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pdf-service-rolebinding
  namespace: pdf-service
subjects:
- kind: ServiceAccount
  name: pdf-service
  namespace: pdf-service
roleRef:
  kind: Role
  name: pdf-service-role
  apiGroup: rbac.authorization.k8s.io 